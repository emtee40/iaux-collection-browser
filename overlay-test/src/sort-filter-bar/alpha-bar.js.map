{"version":3,"file":"alpha-bar.js","sourceRoot":"","sources":["../../../src/sort-filter-bar/alpha-bar.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAG5D,IAAa,QAAQ,GAArB,MAAa,QAAS,SAAQ,UAAU;IAAxC;;QAC8B,mBAAc,GAAkB,IAAI,CAAC;QAgDhD,aAAQ,GAAG,4BAA4B,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IA0CrE,CAAC;IAxFC,IAAY,uBAAuB;;QACjC,OAAO,MAAA,IAAI,CAAC,cAAc,0CAAE,WAAW,EAAE,CAAC;IAC5C,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAA;;;YAGH,IAAI,CAAC,QAAQ,CAAC,GAAG,CACjB,MAAM,CAAC,EAAE,CACP,IAAI,CAAA;;0BAEQ,MAAM,KAAK,IAAI,CAAC,uBAAuB;YAC7C,CAAC,CAAC,UAAU;YACZ,CAAC,CAAC,EAAE;;;;6BAIK,CAAC,CAAQ,EAAE,EAAE;YACpB,CAAC,CAAC,cAAc,EAAE,CAAC;YACnB,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QAC7B,CAAC;;sBAEC,MAAM;;;eAGb,CACJ;;;KAGN,CAAC;IACJ,CAAC;IAEO,aAAa,CAAC,MAAc;QAClC,IAAI,MAAM,KAAK,IAAI,CAAC,uBAAuB,EAAE;YAC3C,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;SAC5B;aAAM;YACL,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC;SAC9B;QACD,IAAI,CAAC,aAAa,CAChB,IAAI,WAAW,CAAC,eAAe,EAAE;YAC/B,MAAM,EAAE,EAAE,cAAc,EAAE,IAAI,CAAC,uBAAuB,EAAE;SACzD,CAAC,CACH,CAAC;IACJ,CAAC;CA4CF,CAAA;AAxCQ,eAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAuClB,CAAC;AAzF0B;IAA3B,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;gDAAsC;AADtD,QAAQ;IADpB,aAAa,CAAC,WAAW,CAAC;GACd,QAAQ,CA2FpB;SA3FY,QAAQ","sourcesContent":["import { LitElement, html, css } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\n\n@customElement('alpha-bar')\nexport class AlphaBar extends LitElement {\n  @property({ type: String }) selectedLetter: string | null = null;\n\n  private get selectedUppercaseLetter(): string | undefined {\n    return this.selectedLetter?.toUpperCase();\n  }\n\n  render() {\n    return html`\n      <div id=\"container\">\n        <ul>\n          ${this.alphabet.map(\n            letter =>\n              html`\n                <li\n                  class=${letter === this.selectedUppercaseLetter\n                    ? 'selected'\n                    : ''}\n                >\n                  <a\n                    href=\"#\"\n                    @click=${(e: Event) => {\n                      e.preventDefault();\n                      this.letterClicked(letter);\n                    }}\n                  >\n                    ${letter}\n                  </a>\n                </li>\n              `\n          )}\n        </ul>\n      </div>\n    `;\n  }\n\n  private letterClicked(letter: string) {\n    if (letter === this.selectedUppercaseLetter) {\n      this.selectedLetter = null;\n    } else {\n      this.selectedLetter = letter;\n    }\n    this.dispatchEvent(\n      new CustomEvent('letterChanged', {\n        detail: { selectedLetter: this.selectedUppercaseLetter },\n      })\n    );\n  }\n\n  private readonly alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');\n\n  static styles = css`\n    h1 {\n      font-size: 1.2rem;\n    }\n\n    #container {\n      background-color: #ddd;\n      color: #333;\n      box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.5);\n    }\n\n    ul {\n      list-style: none;\n      display: flex;\n      margin: 0;\n      padding: 0.5rem 1rem;\n      justify-content: space-between;\n    }\n\n    ul li {\n      flex: 1;\n      text-align: center;\n      max-width: 2.5rem;\n    }\n\n    a {\n      color: #333;\n      text-decoration: none;\n      padding: 0.5rem 0;\n      display: block;\n    }\n\n    .selected {\n      background-color: darkgray;\n    }\n\n    .selected a {\n      color: white;\n    }\n  `;\n}\n"]}