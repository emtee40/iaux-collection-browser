{"version":3,"file":"restoration-state-handler.js","sourceRoot":"","sources":["../../src/restoration-state-handler.ts"],"names":[],"mappings":"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","sourcesContent":["import { SortDirection, SortParam } from '@internetarchive/search-service';\nimport { getCookie, setCookie } from 'typescript-cookie';\nimport {\n  MetadataFieldToSortField,\n  MetadataSortField,\n  FacetOption,\n  CollectionBrowserContext,\n  CollectionDisplayMode,\n  SelectedFacets,\n  SortField,\n} from './models';\n\nexport interface RestorationState {\n  displayMode?: CollectionDisplayMode;\n  sortParam?: SortParam;\n  selectedSort?: SortField;\n  sortDirection?: SortDirection;\n  selectedFacets: SelectedFacets;\n  baseQuery?: string;\n  currentPage?: number;\n  dateRangeQueryClause?: string;\n  titleQuery?: string;\n  creatorQuery?: string;\n  minSelectedDate?: string;\n  maxSelectedDate?: string;\n  selectedTitleFilter?: string;\n  selectedCreatorFilter?: string;\n}\n\nexport interface RestorationStateHandlerInterface {\n  persistState(state: RestorationState): void;\n  getRestorationState(): RestorationState;\n}\n\nexport class RestorationStateHandler\n  implements RestorationStateHandlerInterface\n{\n  private context: CollectionBrowserContext;\n\n  private cookieDomain = '.archive.org';\n\n  private cookieExpiration = 30;\n\n  private cookiePath = '/';\n\n  constructor(options: { context: CollectionBrowserContext }) {\n    this.context = options.context;\n  }\n\n  persistState(state: RestorationState): void {\n    if (state.displayMode) this.persistViewStateToCookies(state.displayMode);\n    this.persistQueryStateToUrl(state);\n  }\n\n  getRestorationState(): RestorationState {\n    const restorationState = this.loadQueryStateFromUrl();\n    const displayMode = this.loadTileViewStateFromCookies();\n    restorationState.displayMode = displayMode;\n    return restorationState;\n  }\n\n  private persistViewStateToCookies(displayMode: CollectionDisplayMode) {\n    const gridState = displayMode === 'grid' ? 'tiles' : 'lists';\n    setCookie(`view-${this.context}`, gridState, {\n      domain: this.cookieDomain,\n      expires: this.cookieExpiration,\n      path: this.cookiePath,\n    });\n    const detailsState = displayMode === 'list-detail' ? 'showdetails' : '';\n    setCookie(`showdetails-${this.context}`, detailsState, {\n      domain: this.cookieDomain,\n      expires: this.cookieExpiration,\n      path: this.cookiePath,\n    });\n  }\n\n  private loadTileViewStateFromCookies(): CollectionDisplayMode {\n    const viewState = getCookie(`view-${this.context}`);\n    const detailsState = getCookie(`showdetails-${this.context}`);\n    if (viewState === 'tiles' || viewState === undefined) return 'grid';\n    if (detailsState === 'showdetails') return 'list-detail';\n    return 'list-compact';\n  }\n\n  private persistQueryStateToUrl(state: RestorationState) {\n    const url = new URL(window.location.href);\n    const { searchParams } = url;\n    searchParams.delete('sort');\n    searchParams.delete('query');\n    searchParams.delete('page');\n    searchParams.delete('and[]');\n    searchParams.delete('not[]');\n\n    if (state.sortParam) {\n      const prefix = state.sortParam.direction === 'desc' ? '-' : '';\n      searchParams.set('sort', `${prefix}${state.sortParam.field}`);\n    }\n\n    if (state.baseQuery) {\n      searchParams.set('query', state.baseQuery);\n    }\n\n    if (state.currentPage) {\n      if (state.currentPage > 1) {\n        searchParams.set('page', state.currentPage.toString());\n      } else {\n        searchParams.delete('page');\n      }\n    }\n\n    if (state.selectedFacets) {\n      for (const [facetName, facetValues] of Object.entries(\n        state.selectedFacets\n      )) {\n        const facetEntries = Object.entries(facetValues);\n        // eslint-disable-next-line no-continue\n        if (facetEntries.length === 0) continue;\n        for (const [key, facetState] of facetEntries) {\n          const notValue = facetState === 'hidden';\n          const paramValue = `${facetName}:\"${key}\"`;\n          if (notValue) {\n            searchParams.append('not[]', paramValue);\n          } else {\n            searchParams.append('and[]', paramValue);\n          }\n        }\n      }\n    }\n\n    if (state.dateRangeQueryClause) {\n      searchParams.append('and[]', state.dateRangeQueryClause);\n    }\n    if (state.titleQuery) {\n      searchParams.append('and[]', state.titleQuery);\n    }\n    if (state.creatorQuery) {\n      searchParams.append('and[]', state.creatorQuery);\n    }\n\n    window.history.pushState(\n      {\n        sort: state.sortParam,\n        query: state.baseQuery,\n        page: state.currentPage,\n        and: state.selectedFacets,\n        not: state.selectedFacets,\n        dateRange: state.dateRangeQueryClause,\n      },\n      '',\n      url\n    );\n  }\n\n  private loadQueryStateFromUrl(): RestorationState {\n    const url = new URL(window.location.href);\n    const pageNumber = url.searchParams.get('page');\n    const searchQuery = url.searchParams.get('query');\n    const sortQuery = url.searchParams.get('sort');\n    const facetAnds = url.searchParams.getAll('and[]');\n    const facetNots = url.searchParams.getAll('not[]');\n\n    const restorationState: RestorationState = {\n      selectedFacets: {\n        subject: {},\n        creator: {},\n        mediatype: {},\n        language: {},\n        collection: {},\n        year: {},\n      },\n    };\n\n    if (pageNumber) {\n      const parsed = parseInt(pageNumber, 10);\n      restorationState.currentPage = parsed;\n    } else {\n      restorationState.currentPage = 1;\n    }\n    if (searchQuery) {\n      restorationState.baseQuery = searchQuery;\n    }\n    if (sortQuery) {\n      // check for two different sort formats: `date desc` and `-date`\n      const hasSpace = sortQuery.indexOf(' ') > -1;\n      if (hasSpace) {\n        const [field, direction] = sortQuery.split(' ');\n        const metadataField =\n          MetadataFieldToSortField[field as MetadataSortField];\n        if (metadataField) {\n          restorationState.selectedSort = metadataField;\n        }\n        if (direction === 'desc' || direction === 'asc') {\n          restorationState.sortDirection = direction as SortDirection;\n        }\n      } else {\n        const sortDirection = sortQuery.startsWith('-') ? 'desc' : 'asc';\n        const sortField = sortQuery.startsWith('-')\n          ? sortQuery.slice(1)\n          : sortQuery;\n        const metadataField =\n          MetadataFieldToSortField[sortField as MetadataSortField];\n        if (metadataField) restorationState.selectedSort = metadataField;\n        restorationState.sortDirection = sortDirection as SortDirection;\n      }\n    }\n    if (facetAnds) {\n      facetAnds.forEach(and => {\n        const [field, value] = and.split(':');\n        const unQuotedValue = this.stripQuotes(value);\n\n        switch (field) {\n          case 'year': {\n            const [minDate, maxDate] = value.split(' TO ');\n            // we have two potential ways of filtering by date:\n            // the range with \"date TO date\" or the single date with \"date\"\n            // this is checking for the range case and if we don't have those, fall\n            // back to the single date case\n            if (minDate && maxDate) {\n              restorationState.minSelectedDate = minDate.substring(\n                1,\n                minDate.length\n              );\n              restorationState.maxSelectedDate = maxDate.substring(\n                0,\n                maxDate.length - 1\n              );\n              restorationState.dateRangeQueryClause = `year:${value}`;\n            } else {\n              restorationState.selectedFacets[field as FacetOption][\n                unQuotedValue\n              ] = 'selected';\n            }\n            break;\n          }\n          case 'firstTitle':\n            restorationState.selectedTitleFilter = value;\n            break;\n          case 'firstCreator':\n            restorationState.selectedCreatorFilter = value;\n            break;\n          default:\n            restorationState.selectedFacets[field as FacetOption][\n              unQuotedValue\n            ] = 'selected';\n        }\n      });\n    }\n    if (facetNots) {\n      facetNots.forEach(not => {\n        const [field, value] = not.split(':');\n        const unQuotedValue = this.stripQuotes(value);\n        restorationState.selectedFacets[field as FacetOption][unQuotedValue] =\n          'hidden';\n      });\n    }\n    return restorationState;\n  }\n\n  // remove optional opening and closing quotes from a string\n  private stripQuotes(value: string): string {\n    if (value.startsWith('\"') && value.endsWith('\"')) {\n      return value.substring(1, value.length - 1);\n    }\n    return value;\n  }\n}\n"]}