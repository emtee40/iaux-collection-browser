{"version":3,"file":"collection-facets.js","sourceRoot":"","sources":["../../src/collection-facets.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable import/no-duplicates */\nimport {\n  css,\n  html,\n  LitElement,\n  PropertyValues,\n  nothing,\n  TemplateResult,\n} from 'lit';\nimport { customElement, property, state } from 'lit/decorators.js';\nimport { repeat } from 'lit/directives/repeat.js';\nimport { Aggregation, Bucket } from '@internetarchive/search-service';\nimport '@internetarchive/histogram-date-range';\nimport '@internetarchive/feature-feedback';\nimport '@internetarchive/collection-name-cache';\nimport { CollectionNameCacheInterface } from '@internetarchive/collection-name-cache';\nimport eyeIcon from './assets/img/icons/eye';\nimport eyeClosedIcon from './assets/img/icons/eye-closed';\nimport chevronIcon from './assets/img/icons/chevron';\nimport {\n  FacetOption,\n  SelectedFacets,\n  FacetGroup,\n  FacetBucket,\n  defaultSelectedFacets,\n} from './models';\nimport { LanguageCodeHandlerInterface } from './language-code-handler/language-code-handler';\n\nconst facetDisplayOrder: FacetOption[] = [\n  'mediatype',\n  'year',\n  'subject',\n  'collection',\n  'creator',\n  'language',\n];\n\nconst aggregationToFacetOption: Record<string, FacetOption> = {\n  subjectSorter: 'subject',\n  mediatypeSorter: 'mediatype',\n  languageSorter: 'language',\n  creatorSorter: 'creator',\n  collection: 'collection',\n  year: 'year',\n};\n\nconst facetTitles: Record<FacetOption, string> = {\n  subject: 'Subject',\n  mediatype: 'Media Type',\n  language: 'Language',\n  creator: 'Creator',\n  collection: 'Collection',\n  year: 'Year',\n};\n\n@customElement('collection-facets')\nexport class CollectionFacets extends LitElement {\n  @property({ type: Object }) aggregations?: Record<string, Aggregation>;\n\n  @property({ type: Object }) fullYearsHistogramAggregation?: Aggregation;\n\n  @property({ type: String }) minSelectedDate?: string;\n\n  @property({ type: String }) maxSelectedDate?: string;\n\n  @property({ type: Boolean }) facetsLoading = false;\n\n  @property({ type: Boolean }) fullYearAggregationLoading = false;\n\n  @property({ type: Object }) selectedFacets?: SelectedFacets;\n\n  @property({ type: Boolean }) collapsableFacets = false;\n\n  @property({ type: Boolean }) showHistogramDatePicker = false;\n\n  @property({ type: Object })\n  languageCodeHandler?: LanguageCodeHandlerInterface;\n\n  @property({ type: Object })\n  collectionNameCache?: CollectionNameCacheInterface;\n\n  @state() openFacets: Record<FacetOption, boolean> = {\n    subject: false,\n    mediatype: false,\n    language: false,\n    creator: false,\n    collection: false,\n    year: false,\n  };\n\n  render() {\n    return html`\n      <div id=\"container\" class=\"${this.facetsLoading ? 'loading' : ''}\">\n        ${this.showHistogramDatePicker && this.fullYearsHistogramAggregation\n          ? html`\n              <div class=\"facet-group\">\n                <h1>Year Published <feature-feedback></feature-feedback></h1>\n                ${this.histogramTemplate}\n              </div>\n            `\n          : nothing}\n        ${this.mergedFacets.map(facetGroup =>\n          this.getFacetGroupTemplate(facetGroup)\n        )}\n      </div>\n    `;\n  }\n\n  updated(changed: PropertyValues) {\n    if (changed.has('selectedFacets')) {\n      this.dispatchFacetsChangedEvent();\n    }\n  }\n\n  private dispatchFacetsChangedEvent() {\n    const event = new CustomEvent<SelectedFacets>('facetsChanged', {\n      detail: this.selectedFacets,\n    });\n    this.dispatchEvent(event);\n  }\n\n  private get currentYearsHistogramAggregation(): Aggregation | undefined {\n    return this.aggregations?.year_histogram;\n  }\n\n  private get histogramTemplate() {\n    const { fullYearsHistogramAggregation } = this;\n    return html`\n      <histogram-date-range\n        .minDate=${fullYearsHistogramAggregation?.first_bucket_key}\n        .maxDate=${fullYearsHistogramAggregation?.last_bucket_key}\n        .minSelectedDate=${this.minSelectedDate}\n        .maxSelectedDate=${this.maxSelectedDate}\n        .updateDelay=${100}\n        missingDataMessage=\"...\"\n        .width=${180}\n        .bins=${fullYearsHistogramAggregation?.buckets as number[]}\n        @histogramDateRangeUpdated=${this.histogramDateRangeUpdated}\n      ></histogram-date-range>\n    `;\n  }\n\n  private histogramDateRangeUpdated(\n    e: CustomEvent<{\n      minDate: string;\n      maxDate: string;\n    }>\n  ) {\n    const { minDate, maxDate } = e.detail;\n    const event = new CustomEvent('histogramDateRangeUpdated', {\n      detail: { minDate, maxDate },\n    });\n    this.dispatchEvent(event);\n  }\n\n  /**\n   * Combines the selected facets with the aggregations to create a single list of facets\n   */\n  private get mergedFacets(): FacetGroup[] {\n    const facetGroups: FacetGroup[] = [];\n\n    facetDisplayOrder.forEach(facetKey => {\n      const selectedFacetGroup = this.selectedFacetGroups.find(\n        group => group.key === facetKey\n      );\n      const aggregateFacetGroup = this.aggregationFacetGroups.find(\n        group => group.key === facetKey\n      );\n\n      // if the user selected a facet, but it's not in the aggregation, we add it as-is\n      if (selectedFacetGroup && !aggregateFacetGroup) {\n        facetGroups.push(selectedFacetGroup);\n        return;\n      }\n\n      // if we don't have an aggregate facet group, don't add this to the list\n      if (!aggregateFacetGroup) return;\n\n      // start with either the selected group if we have one, or the aggregate group\n      const facetGroup = selectedFacetGroup ?? aggregateFacetGroup;\n\n      // attach the counts to the selected buckets\n      const bucketsWithCount =\n        selectedFacetGroup?.buckets.map(bucket => {\n          const selectedBucket = aggregateFacetGroup.buckets.find(\n            b => b.key === bucket.key\n          );\n          return selectedBucket\n            ? {\n                ...bucket,\n                count: selectedBucket.count,\n              }\n            : bucket;\n        }) ?? [];\n\n      // append any additional buckets that were not selected\n      aggregateFacetGroup.buckets.forEach(bucket => {\n        const existingBucket = bucketsWithCount.find(b => b.key === bucket.key);\n        if (existingBucket) return;\n        bucketsWithCount.push(bucket);\n      });\n      facetGroup.buckets = bucketsWithCount.splice(0, 5);\n\n      facetGroups.push(facetGroup);\n    });\n\n    return facetGroups;\n  }\n\n  /**\n   * Converts the selected facets to a `FacetGroup` array,\n   * which is easier to work with\n   */\n  private get selectedFacetGroups(): FacetGroup[] {\n    if (!this.selectedFacets) return [];\n\n    const facetGroups: FacetGroup[] = Object.entries(this.selectedFacets).map(\n      ([key, selectedFacets]) => {\n        const option = key as FacetOption;\n        const title = facetTitles[option];\n\n        const buckets: FacetBucket[] = Object.entries(selectedFacets).map(\n          ([value, facetState]) => {\n            let displayText = value;\n            // for selected languages, we store the language code instead of the\n            // display name, so look up the name from the mapping\n            if (option === 'language') {\n              displayText =\n                this.languageCodeHandler?.getLanguageNameFromCodeString(\n                  value\n                ) ?? value;\n            }\n            return {\n              displayText,\n              key: value,\n              count: 0,\n              state: facetState,\n            };\n          }\n        );\n\n        return {\n          title,\n          key: option,\n          buckets,\n        };\n      }\n    );\n\n    return facetGroups;\n  }\n\n  /**\n   * Converts the raw `aggregations` to `FacetGroups`, which are easier to use\n   */\n  private get aggregationFacetGroups(): FacetGroup[] {\n    const facetGroups: FacetGroup[] = [];\n    Object.entries(this.aggregations ?? []).forEach(([key, buckets]) => {\n      // the year_histogram data is in a different format so can't be handled here\n      if (key === 'year_histogram') return;\n      const option = this.getFacetOptionFromKey(key);\n      const title = facetTitles[option];\n      const castedBuckets = buckets.buckets as Bucket[];\n      const facetBuckets: FacetBucket[] = castedBuckets.map(bucket => {\n        let bucketKey = bucket.key;\n        // for languages, we need to search by language code instead of the\n        // display name, which is what we get from the search engine result\n        if (option === 'language') {\n          // const languageCodeKey = languageToCodeMap[bucket.key];\n          bucketKey =\n            this.languageCodeHandler?.getCodeStringFromLanguageName(\n              `${bucket.key}`\n            ) ?? bucket.key;\n          // bucketKey = languageCodeKey ?? bucket.key;\n        }\n        return {\n          displayText: `${bucket.key}`,\n          key: `${bucketKey}`,\n          count: bucket.doc_count,\n          state: 'none',\n        };\n      });\n      const group: FacetGroup = {\n        title,\n        key: option,\n        buckets: facetBuckets,\n      };\n      facetGroups.push(group);\n    });\n    return facetGroups;\n  }\n\n  /**\n   * Generate the template for a facet group with a header and the collapsible\n   * chevron for the mobile view\n   */\n  private getFacetGroupTemplate(\n    facetGroup: FacetGroup\n  ): TemplateResult | typeof nothing {\n    if (facetGroup.buckets.length === 0) return nothing;\n    const { key } = facetGroup;\n    const isOpen = this.openFacets[key];\n    const collapser = html`\n      <span class=\"collapser ${isOpen ? 'open' : ''}\"> ${chevronIcon} </span>\n    `;\n\n    return html`\n      <div class=\"facet-group ${this.collapsableFacets ? 'mobile' : ''}\">\n        <h1\n          @click=${() => {\n            const newOpenFacets = { ...this.openFacets };\n            newOpenFacets[key] = !isOpen;\n            this.openFacets = newOpenFacets;\n          }}\n          @keyup=${() => {\n            const newOpenFacets = { ...this.openFacets };\n            newOpenFacets[key] = !isOpen;\n            this.openFacets = newOpenFacets;\n          }}\n        >\n          ${this.collapsableFacets ? collapser : nothing} ${facetGroup.title}\n        </h1>\n        <div class=\"facet-group-content ${isOpen ? 'open' : ''}\">\n          ${this.getFacetTemplate(facetGroup)}\n        </div>\n      </div>\n    `;\n  }\n\n  /**\n   * Generate the list template for each bucket in a facet group\n   */\n  private getFacetTemplate(facetGroup: FacetGroup): TemplateResult {\n    const bucketsNoFavorites = facetGroup.buckets.filter(\n      bucket => bucket.key.startsWith('fav-') === false\n    );\n    const bucketsMaxSix = bucketsNoFavorites.slice(0, 6);\n\n    return html`\n      <ul class=\"facet-list\">\n        ${repeat(\n          bucketsMaxSix,\n          bucket => `${facetGroup.key}:${bucket.key}`,\n          bucket => {\n            const showOnlyCheckboxId = `${facetGroup.key}:${bucket.key}-show-only`;\n            const negativeCheckboxId = `${facetGroup.key}:${bucket.key}-negative`;\n\n            // for collections, we need to asynchronously load the collection name\n            // so we use the `async-collection-name` widget and for the rest, we have\n            // a static value to use\n            const bucketTextDisplay =\n              facetGroup.key !== 'collection'\n                ? html`${bucket.displayText ?? bucket.key}`\n                : html`\n                    <async-collection-name\n                      .collectionNameCache=${this.collectionNameCache}\n                      .identifier=${bucket.key}\n                      placeholder=\"-\"\n                    ></async-collection-name>\n                  `;\n\n            const facetHidden = bucket.state === 'hidden';\n            const facetSelected = bucket.state === 'selected';\n\n            const titleText = `${facetGroup.key}: ${\n              bucket.displayText ?? bucket.key\n            }`;\n            const onlyShowText = facetSelected\n              ? `Show all ${facetGroup.key}s`\n              : `Only show ${titleText}`;\n            const hideText = `Hide ${titleText}`;\n            const unhideText = `Unhide ${titleText}`;\n            const showHideText = facetHidden ? unhideText : hideText;\n\n            return html`\n              <li>\n                <div class=\"facet-row\">\n                  <div class=\"facet-checkbox\">\n                    <input\n                      type=\"checkbox\"\n                      .name=${facetGroup.key}\n                      .value=${bucket.key}\n                      @click=${(e: Event) => {\n                        this.facetClicked(e, bucket, false);\n                      }}\n                      .checked=${facetSelected}\n                      class=\"select-facet-checkbox\"\n                      title=${onlyShowText}\n                      id=${showOnlyCheckboxId}\n                    />\n                    <input\n                      type=\"checkbox\"\n                      id=${negativeCheckboxId}\n                      .name=${facetGroup.key}\n                      .value=${bucket.key}\n                      @click=${(e: Event) => {\n                        this.facetClicked(e, bucket, true);\n                      }}\n                      .checked=${facetHidden}\n                      class=\"hide-facet-checkbox\"\n                    />\n                    <label\n                      for=${negativeCheckboxId}\n                      class=\"hide-facet-icon\"\n                      title=${showHideText}\n                    >\n                      ${facetHidden ? eyeClosedIcon : eyeIcon}\n                    </label>\n                  </div>\n\n                  <label\n                    for=${showOnlyCheckboxId}\n                    class=\"facet-info-display\"\n                    title=${onlyShowText}\n                  >\n                    <div class=\"facet-title\">${bucketTextDisplay}</div>\n                    <div class=\"facet-count\">${bucket.count}</div>\n                  </label>\n                </div>\n              </li>\n            `;\n          }\n        )}\n      </ul>\n    `;\n  }\n\n  private facetClicked(e: Event, bucket: FacetBucket, negative: boolean) {\n    const target = e.target as HTMLInputElement;\n    const { checked, name, value } = target;\n    if (checked) {\n      this.facetChecked(name as FacetOption, value, negative);\n    } else {\n      this.facetUnchecked(name as FacetOption, value);\n    }\n  }\n\n  private facetChecked(key: FacetOption, value: string, negative: boolean) {\n    const { selectedFacets } = this;\n    let newFacets: SelectedFacets;\n    if (selectedFacets) {\n      newFacets = {\n        ...selectedFacets,\n      };\n    } else {\n      newFacets = defaultSelectedFacets;\n    }\n    newFacets[key][value] = negative ? 'hidden' : 'selected';\n    this.selectedFacets = newFacets;\n  }\n\n  private facetUnchecked(key: FacetOption, value: string) {\n    const { selectedFacets } = this;\n    let newFacets: SelectedFacets;\n    if (selectedFacets) {\n      newFacets = {\n        ...selectedFacets,\n      };\n    } else {\n      newFacets = defaultSelectedFacets;\n    }\n    delete newFacets[key][value];\n    this.selectedFacets = newFacets;\n  }\n\n  /**\n   * Parse the aggregate key title into the human readable title\n   *\n   * Example: user_aggs__terms__field:mediatypeSorter__size:6 => Media Type\n   *\n   * @param key\n   * @returns\n   */\n  private getFacetOptionFromKey(key: string): FacetOption {\n    const parts = key.split('__');\n    const fieldNamePart = parts[2];\n    const fieldName = fieldNamePart.split(':')[1];\n    const facetMatch = Object.entries(aggregationToFacetOption).find(([key2]) =>\n      fieldName.includes(key2)\n    );\n    const option = facetMatch?.[1];\n    if (!option) throw new Error(`Could not find facet option for key: ${key}`);\n    return option;\n  }\n\n  static get styles() {\n    return css`\n      #container.loading {\n        opacity: 0.5;\n      }\n\n      .collapser {\n        display: inline-block;\n        cursor: pointer;\n        width: 10px;\n        height: 10px;\n      }\n\n      .collapser svg {\n        transition: transform 0.2s ease-in-out;\n      }\n\n      .collapser.open svg {\n        transform: rotate(90deg);\n      }\n\n      .facet-group {\n        margin-bottom: 2rem;\n      }\n\n      .facet-group h1 {\n        margin-bottom: 0.7rem;\n      }\n\n      .facet-group.mobile h1 {\n        cursor: pointer;\n      }\n\n      .facet-group-content {\n        transition: max-height 0.2s ease-in-out;\n      }\n\n      .facet-group.mobile .facet-group-content {\n        max-height: 0;\n        overflow: hidden;\n      }\n\n      .facet-group.mobile .facet-group-content.open {\n        max-height: 2000px;\n      }\n\n      h1 {\n        font-size: 1.4rem;\n        font-weight: 200;\n        border-bottom: 1px solid rgb(232, 232, 232);\n        padding-bottom: 3px;\n        margin: 0;\n      }\n\n      ul.facet-list {\n        list-style: none;\n        margin: 0;\n        padding: 0;\n      }\n\n      ul.facet-list li {\n        margin-bottom: 0.2rem;\n      }\n\n      .facet-checkbox {\n        margin-right: 0.5rem;\n        display: flex;\n        align-items: center;\n      }\n\n      .facet-row {\n        display: flex;\n        align-items: start;\n        font-weight: 500;\n        font-size: 1.2rem;\n      }\n\n      .facet-info-display {\n        display: flex;\n        flex: 1;\n        cursor: pointer;\n      }\n\n      .facet-title {\n        flex: 1;\n      }\n\n      .facet-count {\n        margin-left: 0.5rem;\n      }\n\n      .select-facet-checkbox {\n        cursor: pointer;\n        margin-right: 5px;\n      }\n\n      .hide-facet-checkbox {\n        display: none;\n      }\n\n      .hide-facet-icon {\n        width: 15px;\n        height: 15px;\n        cursor: pointer;\n      }\n    `;\n  }\n}\n"]}